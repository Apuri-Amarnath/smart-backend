# Generated by Django 5.0.6 on 2024-06-11 15:07

import api.models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('registration_number', models.CharField(max_length=20, unique=True, validators=[django.core.validators.MinLengthValidator(11)], verbose_name='registration number')),
                ('role', models.CharField(choices=[('student', 'Student'), ('office', 'Office'), ('faculty', 'Faculty'), ('admin', 'Admin'), ('principal', 'Principal'), ('caretaker', 'Caretaker')], max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('college_code', models.CharField(blank=True, max_length=10, null=True, unique=True)),
                ('college_name', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='college_name')),
                ('college_address', models.TextField(blank=True, max_length=500, null=True, verbose_name='college_address')),
                ('established_date', models.DateField(blank=True, null=True, verbose_name='established_date')),
                ('principal_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='principal_name')),
                ('phone_number', models.CharField(max_length=15, null=True, verbose_name='phone_number')),
                ('email', models.EmailField(max_length=225, null=True, verbose_name='email')),
                ('college_logo', models.ImageField(blank=True, null=True, upload_to=api.models.upload_college_logo, verbose_name='college_logo')),
            ],
        ),
        migrations.CreateModel(
            name='Fees_model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Maintainance_fees', models.CharField(blank=True, max_length=225, null=True, verbose_name='Maintainance_fees')),
                ('Mess_fees', models.CharField(blank=True, max_length=225, null=True, verbose_name='Mess fees')),
                ('Security_Deposit', models.CharField(blank=True, max_length=225, null=True, verbose_name='Security deposit')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_name', models.CharField(blank=True, max_length=225, null=True, verbose_name='subject')),
                ('subject_code', models.CharField(max_length=30, null=True, unique=True, verbose_name='subject_id')),
                ('instructor', models.CharField(blank=True, max_length=100, null=True, verbose_name='Instructor')),
            ],
        ),
        migrations.CreateModel(
            name='AcademicInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_date', models.DateField(blank=True, null=True, verbose_name='enrollment date')),
                ('program', models.CharField(blank=True, max_length=100, null=True, verbose_name='program')),
                ('major', models.CharField(blank=True, max_length=100, null=True, verbose_name='major')),
                ('current_year', models.IntegerField(blank=True, null=True, verbose_name='current year')),
                ('gpa', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='GPA')),
                ('course_enrolled', models.TextField(blank=True, null=True, verbose_name='course enrolled')),
                ('year_semester', models.CharField(blank=True, max_length=10, null=True, verbose_name='year/semester')),
                ('batch', models.CharField(blank=True, max_length=10, null=True, verbose_name='batch')),
                ('department', models.CharField(blank=True, max_length=225, null=True, verbose_name='department')),
                ('course_start_date', models.DateField(blank=True, null=True, verbose_name='course start date')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='academic_information', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=225, null=True, verbose_name='name')),
                ('branch', models.CharField(blank=True, max_length=225, null=True, verbose_name='branch')),
                ('complaint_type', models.CharField(blank=True, choices=[('ragging related', 'Ragging Related'), ('academic fees', 'Academic Fees'), ('classes related', 'Classes Related'), ('others', 'Others')], max_length=225, null=True, verbose_name='complaint type')),
                ('complaint_description', models.TextField(blank=True, null=True, verbose_name='complaint description')),
                ('status', models.CharField(blank=True, choices=[('applied', 'Applied'), ('pending', 'Pending'), ('approved', 'Approved')], max_length=225, null=True, verbose_name='status')),
                ('registration_number', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='registration_number_or_employee_no', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ContactInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=225, null=True, verbose_name='email address')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='phone number')),
                ('alternate_phone_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='alternate phone')),
                ('address', models.TextField(blank=True, max_length=300, null=True, verbose_name='address')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='city')),
                ('state', models.CharField(blank=True, max_length=100, null=True, verbose_name='state')),
                ('postal_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='postal code')),
                ('country', models.CharField(blank=True, max_length=100, null=True, verbose_name='country')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='contact_information', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Guest_room_request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purpose_of_request', models.CharField(choices=[('for staying parents', 'For Staying Parents'), ('for staying relatives', 'For Staying Relatives'), ('for staying invited delegate', 'For Staying Invited Delegate'), ('for staying alumni', 'For Staying Alumni')], max_length=225)),
                ('from_date', models.DateField(blank=True, null=True, verbose_name='from_date')),
                ('to_date', models.DateField(blank=True, null=True, verbose_name='to_date')),
                ('no_of_persons', models.IntegerField(blank=True, null=True, verbose_name='no_of_persons')),
                ('registration_number', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='guest_room_request', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Hostel_Allotment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latest_marksheet', models.BinaryField(blank=True, null=True, verbose_name='marksheet')),
                ('status', models.CharField(blank=True, choices=[('not-applied', 'Not-applied'), ('applied', 'Applied'), ('pending', 'Pending'), ('approved', 'Approved')], default='not-applied', max_length=225, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hostel_allotment_registrations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Hostel_No_Due_request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.CharField(blank=True, max_length=225, null=True, verbose_name='semester')),
                ('Maintance_fees_date', models.DateField(blank=True, null=True, verbose_name='Maintance_fees')),
                ('Mess_fees_date', models.DateField(blank=True, null=True, verbose_name='Mess_fees')),
                ('self_declaration', models.BooleanField(blank=True, default=False, null=True, verbose_name='self_agree')),
                ('requested_date', models.DateField(blank=True, null=True, verbose_name='requested_date')),
                ('approved_date', models.DateField(blank=True, null=True, verbose_name='approves_date')),
                ('registration_number', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='Hostel_no_due_request', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Hostel_Room_Allotment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostel_room', models.CharField(blank=True, max_length=225, null=True, unique=True, verbose_name='hostel_room')),
                ('registration_details', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='hostel_room_allotment', to='api.hostel_allotment')),
            ],
        ),
        migrations.CreateModel(
            name='Mess_fee_payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_date', models.DateField(blank=True, null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
                ('fees', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.fees_model')),
                ('registration_details', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.hostel_room_allotment')),
            ],
        ),
        migrations.CreateModel(
            name='PersonalInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=100, verbose_name='last name')),
                ('father_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='father name')),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='middle name')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='birth')),
                ('gender', models.CharField(blank=True, max_length=10, null=True, verbose_name='gender')),
                ('profile_picture', models.ImageField(blank=True, max_length=200, null=True, upload_to=api.models.upload_to_profile_pictures)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='personal_information', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Bonafide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supporting_document', models.BinaryField(blank=True, null=True, verbose_name='supporting_document')),
                ('issue_date', models.DateField(blank=True, null=True, verbose_name='issue date')),
                ('applied_date', models.DateField(blank=True, null=True, verbose_name='applied date')),
                ('required_for', models.CharField(blank=True, max_length=225, null=True, verbose_name='required for')),
                ('fee_structure', models.BooleanField(blank=True, default=False, null=True, verbose_name='fee_structure')),
                ('bonafide_number', models.CharField(blank=True, max_length=10, null=True, unique=True, verbose_name='bonafide number')),
                ('status', models.CharField(choices=[('not-applied', 'Not-applied'), ('applied', 'Applied'), ('pending', 'Pending'), ('rejected', 'Rejected'), ('approved', 'Approved')], default=('not-applied', 'Not-applied'), max_length=225, verbose_name='status')),
                ('roll_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roll_no', to=settings.AUTH_USER_MODEL)),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bonafide_college', to='api.college')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bonafide_student', to='api.personalinformation')),
            ],
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch', models.CharField(blank=True, max_length=225, null=True, verbose_name='branch')),
                ('semester_name', models.CharField(max_length=225, verbose_name='semester_name')),
                ('subjects', models.ManyToManyField(related_name='semester_subjects', to='api.subject', verbose_name='subjects')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_information', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='academic_profile', to='api.academicinformation')),
                ('contact_information', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='contact_profile', to='api.contactinformation')),
                ('personal_information', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='personal_profile', to='api.personalinformation')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Semester_Registration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applied_date', models.DateField(blank=True, null=True, verbose_name='semester_registration_date')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='semester_registrations', to='api.semester')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='semester_registration_student', to='api.userprofile')),
            ],
        ),
    ]
