Index: backend/api/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import os.path\r\nimport smtplib\r\nfrom email.mime.text import MIMEText\r\n\r\nfrom django.conf import settings\r\nfrom django.core.files.storage import default_storage\r\nfrom django.core.files.base import ContentFile\r\nfrom django.core.mail import send_mail\r\nfrom django.db import transaction\r\nfrom django.utils import timezone\r\nfrom rest_framework.decorators import action\r\nfrom rest_framework.filters import SearchFilter\r\nfrom rest_framework.response import Response\r\nfrom rest_framework import status, generics, permissions, viewsets\r\nfrom rest_framework.views import APIView\r\nfrom rest_framework_simplejwt.serializers import TokenRefreshSerializer\r\nfrom rest_framework_simplejwt.views import TokenRefreshView\r\nfrom django.contrib.auth.models import User\r\n\r\nfrom .emails import send_login_credentials\r\nfrom .models import User, UserProfile, College, Bonafide, PersonalInformation, AcademicInformation, ContactInformation, \\\r\n    Subject, Semester, Semester_Registration, Hostel_Allotment, Guest_room_request, Hostel_No_Due_request, \\\r\n    Hostel_Room_Allotment, Fees_model, Mess_fee_payment, Complaint, Overall_No_Dues_Request, No_Dues_list, \\\r\n    VerifySemesterRegistration, Notification, Departments_for_no_Dues, CollegeRequest\r\nfrom .renderers import UserRenderer\r\nfrom .serializers import UserRegistrationSerializer, UserLoginSerializer, UserProfileSerializer, CollegeSerializer, \\\r\n    BonafideSerializer, PersonalInfoSerializer, AcademicInfoSerializer, ContactInformationSerializer, \\\r\n    ChangeUserPasswordSerializer, Csv_RegistrationSerializer, SubjectSerializer, SemesterSerializer, \\\r\n    SemesterRegistrationSerializer, HostelAllotmentSerializer, GuestRoomAllotmentSerializer, HostelNoDuesSerializer, \\\r\n    HostelRoomAllotmentSerializer, MessFeeSerializer, MessFeePaymentSerializer, HostelAllotmentStatusUpdateSerializer, \\\r\n    ComplaintSerializer, Overall_No_Due_Serializer, No_Due_ListSerializer, SemesterVerificationSerializer, \\\r\n    NotificationSerializer, Departments_for_no_dueSerializer, Cloned_Departments_for_no_dueSerializer, \\\r\n    CollegeRequestSerializer, CollegeSlugSerializer, CollegeRequestVerificationSerializer\r\nfrom django.contrib.auth import authenticate\r\nfrom rest_framework_simplejwt.tokens import RefreshToken\r\nfrom rest_framework.permissions import IsAuthenticated\r\nfrom rest_framework.exceptions import ValidationError, NotFound\r\nfrom django.http import HttpResponse, Http404\r\nfrom django.views.decorators.csrf import csrf_exempt\r\nfrom django.shortcuts import get_object_or_404\r\nfrom rest_framework.exceptions import PermissionDenied\r\nimport subprocess\r\nimport git\r\nimport csv\r\nfrom rest_framework.parsers import MultiPartParser, FormParser\r\nfrom django.core.exceptions import ObjectDoesNotExist\r\nfrom rest_framework.filters import SearchFilter, OrderingFilter\r\nfrom rest_framework import viewsets, filters\r\nfrom .permissions import IsCaretakerOrAdmin, IsStudentOrAdmin, IsFacultyOrAdmin, IsDepartmentOrAdmin, IsOfficeOrAdmin, \\\r\n    IsAdmin\r\nfrom django.db.models import Case, When, IntegerField\r\nimport logging\r\n\r\n# Set up logging\r\nlogger = logging.getLogger(__name__)\r\n\r\n\r\n@csrf_exempt\r\ndef update(request):\r\n    if request.method == \"POST\":\r\n        try:\r\n            repo = git.Repo(\"/home/Amarnath013/smart-backend\")\r\n            origin = repo.remotes.origin\r\n            origin.pull()\r\n            logger.info(\"Successfully updated the code on PythonAnywhere.\")\r\n            return HttpResponse(\"Updated code on PythonAnywhere\")\r\n        except Exception as e:\r\n            logger.error(f\"Error updating code: {str(e)}\")\r\n            try:\r\n                repo.git.stash()\r\n                origin.pull()\r\n                logger.info(\"Successfully updated the code on PythonAnywhere after stashing changes.\")\r\n                subprocess.run([\"/bin/bash\", \"/home/Amarnath013/smart-backend/config.sh\"], check=True)\r\n                return HttpResponse(\"Updated code on PythonAnywhere after stashing changes\")\r\n            except Exception as e2:\r\n                logger.error(f\"Error updating code after stashing changes: {str(e2)}\")\r\n                return HttpResponse(\"An error occurred while updating the code, even after stashing changes.\")\r\n    else:\r\n        return HttpResponse(\"This endpoint only supports POST requests.\")\r\n\r\n\r\n# manually generate token\r\ndef get_tokens_for_user(user):\r\n    refresh = RefreshToken.for_user(user)\r\n    refresh['role'] = user.role\r\n    refresh['registration_number'] = user.registration_number\r\n    refresh['college'] = user.college.id if user.college else None\r\n\r\n    return {\r\n        'refresh': str(refresh),\r\n        'access': str(refresh.access_token),\r\n    }\r\n\r\n\r\nclass TokenRefresh(APIView):\r\n    renderer_classes = [UserRenderer]\r\n    permission_classes = [IsAuthenticated]\r\n\r\n    def post(self, request):\r\n        refresh_token = request.data.get('refresh')\r\n        serializer = TokenRefreshSerializer(data={'refresh': refresh_token})\r\n        serializer.is_valid(raise_exception=True)\r\n        access_token = serializer.validated_data['access']\r\n        return Response({'access': str(access_token)}, status=status.HTTP_200_OK)\r\n\r\n\r\nclass UserRegistrationView(APIView):\r\n    renderer_classes = [UserRenderer]\r\n    permission_classes = [IsOfficeOrAdmin]\r\n\r\n    def post(self, request, *args, **kwargs):\r\n        slug = kwargs.get('slug')\r\n\r\n        if 'file' in request.data:\r\n            file_serializer = Csv_RegistrationSerializer(data=request.data)\r\n            if file_serializer.is_valid(raise_exception=True):\r\n                csv_file = file_serializer.validated_data['file']\r\n                file_path = self.save_uploaded_file(csv_file)\r\n                response = self.handle_csv_user_creation(file_path,slug)\r\n                return response\r\n        else:\r\n            if not slug:\r\n                return Response({'error': 'Not a valid slug'}, status=status.HTTP_400_BAD_REQUEST)\r\n            try:\r\n                college = College.objects.get(slug=slug)\r\n            except College.DoesNotExist:\r\n                return Response({'error': 'College not found'}, status=status.HTTP_404_NOT_FOUND)\r\n\r\n            user_data = request.data.copy()\r\n            user_data['college'] = college.id\r\n            serializer = UserRegistrationSerializer(data=user_data)\r\n            if serializer.is_valid(raise_exception=True):\r\n                user = serializer.save()\r\n                token = get_tokens_for_user(user)\r\n                return Response({'token': token, 'message': 'User creation successful'}, status=status.HTTP_201_CREATED)\r\n            return Response({'message': 'user already exits', \"error\": serializer.errors},\r\n                            status=status.HTTP_400_BAD_REQUEST)\r\n\r\n    def save_uploaded_file(self, csv_file):\r\n        upload_dir = settings.CSV_UPLOADS_DIR\r\n        if not os.path.exists(upload_dir):\r\n            os.makedirs(upload_dir)\r\n\r\n        file_path = os.path.join(upload_dir, csv_file.name)\r\n        with default_storage.open(file_path, 'wb+') as destination:\r\n            for chunk in csv_file.chunks():\r\n                destination.write(chunk)\r\n        return file_path\r\n\r\n    @transaction.atomic\r\n    def handle_csv_user_creation(self, csv_file_path, slug):\r\n        if not os.path.exists(csv_file_path):\r\n            return Response({'message': 'csv file not found'}, status=status.HTTP_400_BAD_REQUEST)\r\n        user_created = []\r\n        user_existing = []\r\n        errors = []\r\n        try:\r\n            college = College.objects.get(slug=slug)\r\n            college_request = CollegeRequest.objects.get(college_name=college.college_name)\r\n        except College.DoesNotExist:\r\n            return Response({'error': 'College not found'}, status=status.HTTP_404_NOT_FOUND)\r\n        except CollegeRequest.DoesNotExist:\r\n            return Response({'error': 'College request not found'}, status=status.HTTP_404_NOT_FOUND)\r\n\r\n        with open(csv_file_path, newline='') as csvfile:\r\n            reader = csv.DictReader(csvfile)\r\n\r\n            for row in reader:\r\n                row['college'] = college.id\r\n                registration_number = row.get('registration_number')\r\n                if User.objects.filter(registration_number=registration_number,college=college).exists():\r\n                    user_existing.append(registration_number)\r\n                else:\r\n                    serializer = UserRegistrationSerializer(data=row)\r\n                    if serializer.is_valid():\r\n                        user = serializer.save()\r\n                        user_created.append(user.registration_number)\r\n                        college_request.id_count += 1\r\n                        college_request.save()\r\n                    else:\r\n                        errors.append(serializer.errors)\r\n\r\n        return Response({'message': 'user creation process completed', 'users_created': user_created,\r\n                         'user_existing': user_existing, 'error': errors},\r\n                        status=status.HTTP_200_OK if not errors else status.HTTP_400_BAD_REQUEST)\r\n\r\n\r\nclass UserLoginView(APIView):\r\n    renderer_classes = [UserRenderer]\r\n\r\n    def post(self, request, format=None):\r\n        serializer = UserLoginSerializer(data=request.data)\r\n        if serializer.is_valid(raise_exception=True):\r\n            registration_number = serializer.data.get('registration_number')\r\n            password = serializer.data.get('password')\r\n            user = authenticate(registration_number=registration_number, password=password)\r\n            if user is not None:\r\n                token = get_tokens_for_user(user)\r\n                college_data = None\r\n                if user.college:\r\n                    college_serailzer = CollegeSerializer(user.college)\r\n                    college_data = college_serailzer.data.get('college_name')\r\n                return Response(\r\n                    {'token': token, 'message': 'Login successful', 'role': user.role, 'college': college_data},\r\n                    status=status.HTTP_200_OK)\r\n            else:\r\n                return Response(\r\n                    {'error': {'non_fields_errors': ['registration number or password is Not valid']}},\r\n                    status=status.HTTP_400_BAD_REQUEST)\r\n\r\n\r\nclass ChangePasswordView(APIView):\r\n    renderer_classes = [UserRenderer]\r\n    permission_classes = [IsAuthenticated]\r\n\r\n    def post(self, request, format=None):\r\n        serializer = ChangeUserPasswordSerializer(data=request.data, context={'user': request.user})\r\n        if serializer.is_valid(raise_exception=True):\r\n            return Response({'message': 'password change successfully'}, status=status.HTTP_200_OK)\r\n        return Response({'error': serializer.errors}, status=status.HTTP_400_BAD_REQUEST)\r\n\r\n\r\nclass UserProfileView(generics.RetrieveUpdateAPIView):\r\n    queryset = UserProfile.objects.all()\r\n    renderer_classes = [UserRenderer]\r\n    serializer_class = UserProfileSerializer\r\n    permission_classes = [IsStudentOrAdmin]\r\n\r\n    def get_object(self):\r\n        try:\r\n            return self.request.user.profile\r\n        except UserProfile.DoesNotExist:\r\n            raise ValidationError({'detail': 'User profile not found.', 'code': 'user_not_found'},\r\n                                  status=status.HTTP_404_NOT_FOUND)\r\n\r\n    def perform_update(self, serializer):\r\n        serializer.save(user=self.request.user)\r\n\r\n    def update(self, request, *args, **kwargs):\r\n        if not request.data:\r\n            raise ValidationError({'error': 'Empty JSON payload is not allowed.'},\r\n                                  status=status.HTTP_400_BAD_REQUEST)\r\n        partial = kwargs.pop('partial', False)\r\n        instance = self.get_object()\r\n        serializer = self.get_serializer(instance, data=request.data, partial=partial)\r\n        if serializer.is_valid(raise_exception=True):\r\n            self.perform_update(serializer)\r\n            return Response(\r\n                {'status': 'success', 'message': 'User profile updated successfully.',\r\n                 'user_profile': serializer.data},\r\n                status=status.HTTP_200_OK)\r\n        return Response({'status': 'error', 'errors': serializer.errors}, status=status.HTTP_400_BAD_REQUEST)\r\n\r\n\r\nclass UserLogoutView(generics.GenericAPIView):\r\n    permission_classes = [IsAuthenticated]\r\n\r\n    def post(self, request, *args, **kwargs):\r\n        try:\r\n            refresh_token = request.data.get('refresh')\r\n            token = RefreshToken(refresh_token)\r\n            token.blacklist()\r\n            return Response({'message': 'Successfully logged out.'}, status=status.HTTP_200_OK)\r\n        except Exception as e:\r\n            return Response({'error': str(e)}, status=status.HTTP_400_BAD_REQUEST)\r\n\r\n\r\nclass CollegeViewSet(viewsets.ModelViewSet):\r\n    queryset = College.objects.all()\r\n    serializer_class = CollegeSerializer\r\n    renderer_classes = [UserRenderer]\r\n    permission_classes = [IsOfficeOrAdmin | IsStudentOrAdmin]\r\n\r\n    def retrieve(self, request, *args, **kwargs):\r\n        slug = kwargs.get('slug')\r\n        print(slug)\r\n        try:\r\n            college = College.objects.get(slug=slug)\r\n        except College.DoesNotExist:\r\n            raise NotFound(detail='College not found')\r\n        serializer = self.get_serializer(college)\r\n        return Response(serializer.data)\r\n\r\n    def create(self, request, *args, **kwargs):\r\n        if self.request.user.role != 'super-admin':\r\n            raise PermissionDenied({'error': 'Only site-admin or staff users can add colleges'})\r\n        return super().create(request, *args, **kwargs)\r\n\r\n    def update(self, request, *args, **kwargs):\r\n        if self.request.user.role != 'super-admin':\r\n            raise PermissionDenied({'error': 'Only site-admin or staff users can update college data.'})\r\n        return super().create(request, *args, **kwargs)\r\n\r\n\r\nclass BonafideViewSet(viewsets.ModelViewSet):\r\n    queryset = Bonafide.objects.all()\r\n    serializer_class = BonafideSerializer\r\n    permission_classes = [IsAuthenticated]\r\n    renderer_classes = [UserRenderer]\r\n    filter_backends = [SearchFilter, OrderingFilter]\r\n    search_fields = ['roll_no__registration_number']\r\n\r\n    def get_queryset(self):\r\n        status_order = Case(\r\n            When(status='applied', then=1),\r\n            When(status='approved', then=2),\r\n            When(status='rejected', then=3),\r\n            When(status='pending', then=4),\r\n            When(status='not-applied', then=5),\r\n            output_field=IntegerField(),\r\n        )\r\n        return super().get_queryset().annotate(\r\n            status_order=status_order\r\n        ).order_by('status_order')\r\n\r\n    def get_object(self):\r\n        registration_number = self.request.query_params.get('roll_no__registration_number')\r\n        if not registration_number:\r\n            raise ValidationError({'error': 'Registration number is required.'}, status=status.HTTP_400_BAD_REQUEST)\r\n        try:\r\n            return self.queryset.get(roll_no__registration_number=registration_number)\r\n        except Bonafide.DoesNotExist:\r\n            raise ValidationError({'error': 'Details are not found.'}, status=status.HTTP_404_NOT_FOUND)\r\n\r\n    def perform_update(self, serializer):\r\n        with transaction.atomic():\r\n            serializer.save(user=self.request.user)\r\n\r\n    def update(self, request, *args, **kwargs):\r\n        if not self.request.data:\r\n            raise ValidationError({'error': 'Empty JSON payload is not allowed.'},\r\n                                  status=status.HTTP_400_BAD_REQUEST)\r\n        partial = kwargs.pop('partial', False)\r\n        instance = self.get_object()\r\n        serializer = self.get_serializer(instance, data=request.data, partial=partial)\r\n        if serializer.is_valid(raise_exception=True):\r\n            self.perform_update(serializer)\r\n            return Response(\r\n                {'status': 'success', 'message': 'Details uploaded successfully.',\r\n                 'Bonafide_data': serializer.data},\r\n                status=status.HTTP_200_OK)\r\n        return Response({'status': 'error', 'errors': serializer.errors}, status=status.HTTP_400_BAD_REQUEST)\r\n\r\n    def create(self, request, *args, **kwargs):\r\n        serializer = self.get_serializer(data=request.data)\r\n        if serializer.is_valid():\r\n            self.perform_create(serializer)\r\n            headers = self.get_success_headers(serializer.data)\r\n            return Response(serializer.data, status=status.HTTP_201_CREATED, headers=headers)\r\n        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\r\n\r\n\r\nclass SubjectViewSet(viewsets.ModelViewSet):\r\n    permission_classes = [IsAuthenticated]\r\n    renderer_classes = [UserRenderer]\r\n    queryset = Subject.objects.all()\r\n    serializer_class = SubjectSerializer\r\n    filter_backends = [SearchFilter]\r\n    search_fields = ['subject_name', 'subject_code', 'instructor']\r\n\r\n    def create(self, request, *args, **kwargs):\r\n        if self.request.user.role not in ['admin', 'faculty']:\r\n            raise PermissionDenied({'error': 'Only admin or staff users can add subjects data.'})\r\n        return super().create(request, *args, **kwargs)\r\n\r\n    def update(self, request, *args, **kwargs):\r\n        if self.request.user.role not in ['admin', 'faculty']:\r\n            raise PermissionDenied({'error': 'Only admin or staff users can add subjects data.'})\r\n        return super().create(request, *args, **kwargs)\r\n\r\n\r\nclass SemesterViewSet(viewsets.ModelViewSet):\r\n    permission_classes = [IsAuthenticated]\r\n    renderer_classes = [UserRenderer]\r\n    queryset = Semester.objects.all()\r\n    serializer_class = SemesterSerializer\r\n    filter_backends = [SearchFilter, OrderingFilter]\r\n    search_fields = ['semester_name', 'branch']\r\n    ordering_fields = '__all__'\r\n    ordering = ['semester_name', ]\r\n\r\n    def create(self, request, *args, **kwargs):\r\n        if self.request.user.role not in ['admin', 'faculty']:\r\n            raise ValidationError({'error': 'Only admin or staff users can create semester data.'})\r\n        serializer = self.get_serializer(data=request.data)\r\n        if serializer.is_valid(raise_exception=True):\r\n            self.perform_create(serializer)\r\n            headers = self.get_success_headers(serializer.data)\r\n            return Response(serializer.data, status=status.HTTP_201_CREATED, headers=headers)\r\n        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\r\n\r\n    def perform_update(self, serializer):\r\n        if self.request.user.role not in ['admin', 'faculty']:\r\n            raise ValidationError({'error': 'Only admin or staff users can update semester data.'})\r\n        serializer.save()\r\n\r\n    def perform_create(self, serializer):\r\n        if self.request.user.role not in ['admin', 'faculty']:\r\n            raise ValidationError({'error': 'Only admin or staff users can create semester data.'})\r\n        serializer.save()\r\n\r\n    def update(self, request, *args, **kwargs):\r\n        partial = kwargs.pop('partial', False)\r\n        instance = self.get_object()\r\n        serializer = self.get_serializer(instance, data=request.data, partial=partial)\r\n        if serializer.is_valid(raise_exception=True):\r\n            self.perform_update(serializer)\r\n            return Response(serializer.data)\r\n        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\r\n\r\n\r\nclass SemesterRegistrationViewset(viewsets.ModelViewSet):\r\n    permission_classes = [IsAuthenticated]\r\n    filter_backends = [SearchFilter]\r\n    search_fields = ['student__user__registration_number']\r\n    renderer_classes = [UserRenderer]\r\n    queryset = Semester_Registration.objects.all()\r\n    serializer_class = SemesterRegistrationSerializer\r\n\r\n    def create(self, request, *args, **kwargs):\r\n        serializer = self.get_serializer(data=request.data)\r\n        if serializer.is_valid(raise_exception=True):\r\n            self.perform_create(serializer)\r\n            return Response(serializer.data, status=status.HTTP_201_CREATED)\r\n        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\r\n\r\n    def perform_create(self, serializer):\r\n        serializer.save()\r\n\r\n\r\nclass HostelAllotmentViewset(viewsets.ModelViewSet):\r\n    permission_classes = [IsAuthenticated, IsStudentOrAdmin | IsCaretakerOrAdmin]\r\n    renderer_classes = [UserRenderer]\r\n    filter_backends = [filters.SearchFilter, filters.OrderingFilter]\r\n    search_fields = ['user__registration_number', 'status']\r\n    queryset = Hostel_Allotment.objects.all()\r\n    serializer_class = HostelAllotmentSerializer\r\n\r\n    def get_serializer_context(self):\r\n        context = super().get_serializer_context()\r\n        context['request'] = self.request\r\n        return context\r\n\r\n    def perform_create(self, serializer):\r\n        serializer.save(user=self.request.user)\r\n\r\n    def create(self, request, *args, **kwargs):\r\n        serializer = self.get_serializer(data=request.data)\r\n        if serializer.is_valid(raise_exception=True):\r\n            self.perform_create(serializer)\r\n            return Response(serializer.data, status=status.HTTP_201_CREATED)\r\n        return Response({'error': serializer.errors}, status=status.HTTP_400_BAD_REQUEST)\r\n\r\n\r\nclass HostelRoomAllotmentViewset(viewsets.ModelViewSet):\r\n    permission_classes = [IsAuthenticated, IsCaretakerOrAdmin | IsStudentOrAdmin]\r\n    renderer_classes = [UserRenderer]\r\n    filter_backends = [filters.SearchFilter]\r\n    search_fields = ['registration_details__user__registration_number']\r\n    queryset = Hostel_Room_Allotment.objects.all()\r\n    serializer_class = HostelRoomAllotmentSerializer\r\n\r\n    def create(self, request, *args, **kwargs):\r\n        if not (request.user.role == 'admin' or request.user.role == 'caretaker'):\r\n            return Response(\r\n                {\"detail\": \"You do not have permission to perform this action.\"},\r\n                status=status.HTTP_403_FORBIDDEN,\r\n            )\r\n        serializer = self.get_serializer(data=request.data)\r\n        if serializer.is_valid(raise_exception=True):\r\n            hostel_room_allotment = serializer.save()\r\n            return Response(serializer.data, status=status.HTTP_201_CREATED)\r\n        return Response({'error': serializer.errors}, status=status.HTTP_400_BAD_REQUEST)\r\n\r\n    def get_serializer_context(self):\r\n        context = super().get_serializer_context()\r\n        context['request'] = self.request\r\n        return context\r\n\r\n\r\nclass MessFeeCreateSet(APIView):\r\n    queryset = Fees_model.objects.all()\r\n    serializer_class = MessFeeSerializer\r\n    permission_classes = [IsAuthenticated, IsCaretakerOrAdmin]\r\n\r\n    def post(self, request, format=None):\r\n        serializer = MessFeeSerializer(data=request.data)\r\n        if serializer.is_valid(raise_exception=True):\r\n            serializer.save()\r\n            return Response({'message': 'data added succesfully'}, status=status.HTTP_201_CREATED)\r\n        return Response({'error': serializer.errors}, status=status.HTTP_400_BAD_REQUEST)\r\n\r\n\r\nclass UpdateMessFeeViewset(APIView):\r\n    permission_classes = [IsAuthenticated, IsCaretakerOrAdmin]\r\n\r\n    def put(self, request, pk, format=None):\r\n        if pk != 1:\r\n            return Response({'error': 'invalid pk'}, status=status.HTTP_400_BAD_REQUEST)\r\n        try:\r\n            fee = Fees_model.objects.get(pk=pk)\r\n        except Fees_model.DoesNotExist:\r\n            return Response(status=status.HTTP_404_NOT_FOUND)\r\n        serializer = MessFeeSerializer(fee, data=request.data)\r\n        if serializer.is_valid(raise_exception=True):\r\n            serializer.save()\r\n            return Response({'message': 'data updated succesfully'}, status=status.HTTP_202_ACCEPTED)\r\n        return Response({'error': serializer.errors}, status=status.HTTP_400_BAD_REQUEST)\r\n\r\n\r\nclass GetMessFeeViewset(APIView):\r\n    renderer_classes = [UserRenderer]\r\n    permission_classes = [IsAuthenticated]\r\n\r\n    def get(self, request, pk=1, format=None):\r\n        if pk:\r\n            try:\r\n                fee = Fees_model.objects.get(pk=pk)\r\n            except Fees_model.DoesNotExist:\r\n                return Response({\"message\": \"ID does not Exists\"}, status.HTTP_404_NOT_FOUND)\r\n            serializer = MessFeeSerializer(fee)\r\n            return Response(serializer.data, status=status.HTTP_200_OK)\r\n        else:\r\n            fee = Fees_model.objects.all()\r\n            serializer = MessFeeSerializer(fee, many=True)\r\n            return Response(serializer.data, status=status.HTTP_200_OK)\r\n\r\n\r\nclass MessFeePaymentCreateViewset(viewsets.ModelViewSet):\r\n    renderer_classes = [UserRenderer]\r\n    serializer_class = MessFeePaymentSerializer\r\n    queryset = Mess_fee_payment.objects.all()\r\n    permission_classes = [IsAuthenticated, IsCaretakerOrAdmin | IsStudentOrAdmin]\r\n    filter_backends = [filters.SearchFilter]\r\n    search_fields = ['registration_details__registration_details__user__registration_number']\r\n\r\n    def get(self, request, *args, **kwargs):\r\n        mess_fee_payments = Mess_fee_payment.objects.all()\r\n        serializer = MessFeePaymentSerializer(mess_fee_payments, many=True)\r\n        return Response(serializer.data)\r\n\r\n    def perform_create(self, serializer):\r\n        serializer.save()\r\n\r\n    def post(self, request, *args, **kwargs):\r\n        serializer = MessFeePaymentSerializer(data=request.data)\r\n        if serializer.is_valid():\r\n            serializer.save()\r\n            return Response(serializer.data, status=status.HTTP_201_CREATED)\r\n        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\r\n\r\n\r\nclass MessFeePaymentDetailView(APIView):\r\n    renderer_classes = [UserRenderer]\r\n    permission_classes = [IsAuthenticated]\r\n\r\n    def get_object(self, pk):\r\n        try:\r\n            return Mess_fee_payment.objects.get(pk=pk)\r\n        except Mess_fee_payment.DoesNotExist:\r\n            raise Http404\r\n\r\n    def get(self, request, pk, format=None):\r\n        mess_fee_payment = self.get_object(pk)\r\n        serializer = MessFeePaymentSerializer(mess_fee_payment)\r\n        return Response(serializer.data)\r\n\r\n    def put(self, request, pk, format=None):\r\n        mess_fee_payment = self.get_object(pk)\r\n        serializer = MessFeePaymentSerializer(mess_fee_payment, data=request.data)\r\n        if serializer.is_valid():\r\n            serializer.save()\r\n            return Response(serializer.data)\r\n        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\r\n\r\n    def delete(self, request, pk, format=None):\r\n        mess_fee_payment = self.get_object(pk)\r\n        mess_fee_payment.delete()\r\n        return Response(status=status.HTTP_204_NO_CONTENT)\r\n\r\n\r\nclass HostelAllotmentStatusUpdateView(APIView):\r\n    serializer_class = HostelAllotmentStatusUpdateSerializer\r\n    renderer_classes = [UserRenderer]\r\n    permission_classes = [IsAuthenticated, IsCaretakerOrAdmin]\r\n\r\n    def get_object(self, pk):\r\n        try:\r\n            return Hostel_Allotment.objects.get(pk=pk)\r\n        except Hostel_Allotment.DoesNotExist:\r\n            raise Http404\r\n\r\n    def put(self, request, pk, format=None):\r\n        hostel_allotment = self.get_object(pk)\r\n        serializer = HostelAllotmentStatusUpdateSerializer(hostel_allotment, data=request.data)\r\n        if serializer.is_valid():\r\n            serializer.save()\r\n            return Response(serializer.data)\r\n        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\r\n\r\n\r\nclass GuestRoomAllotmentViewSet(viewsets.ModelViewSet):\r\n    serializer_class = GuestRoomAllotmentSerializer\r\n    queryset = Guest_room_request.objects.all()\r\n    permission_classes = [IsAuthenticated]\r\n    renderer_classes = [UserRenderer]\r\n    filter_backends = [SearchFilter]\r\n    search_fields = ['user__registration_number']\r\n\r\n    def perform_create(self, serializer):\r\n        serializer.save(user=self.request.user)\r\n\r\n    def create(self, request, *args, **kwargs):\r\n        serializer = self.get_serializer(data=request.data)\r\n        if serializer.is_valid(raise_exception=True):\r\n            self.perform_create(serializer)\r\n            return Response(\r\n                {'data': serializer.data, 'message': 'guest room allotment request was successfully created '},\r\n                status=status.HTTP_201_CREATED)\r\n        return Response({'error': serializer.errors}, status=status.HTTP_400_BAD_REQUEST)\r\n\r\n\r\nclass ComplaintViewSet(viewsets.ModelViewSet):\r\n    renderer_classes = [UserRenderer]\r\n    serializer_class = ComplaintSerializer\r\n    queryset = Complaint.objects.all()\r\n    permission_classes = [IsAuthenticated]\r\n    filter_backends = [SearchFilter]\r\n    search_fields = ['user__registration_number']\r\n\r\n    def perform_create(self, serializer):\r\n        serializer.save(user=self.request.user)\r\n\r\n    def create(self, request, *args, **kwargs):\r\n        serializer = self.get_serializer(data=request.data)\r\n        if serializer.is_valid(raise_exception=True):\r\n            self.perform_create(serializer)\r\n            return Response({'data': serializer.data, 'message': 'Complaint successfully created'},\r\n                            status=status.HTTP_200_OK)\r\n        return Response({'error': serializer.errors}, status=status.HTTP_400_BAD_REQUEST)\r\n\r\n\r\nclass Overall_no_duesViewSet(viewsets.ModelViewSet):\r\n    serializer_class = Overall_No_Due_Serializer\r\n    queryset = Overall_No_Dues_Request.objects.all()\r\n    permission_classes = [IsAuthenticated, IsStudentOrAdmin | IsDepartmentOrAdmin]\r\n    renderer_classes = [UserRenderer]\r\n\r\n    def perform_create(self, serializer):\r\n        serializer.save(user=self.request.user)\r\n\r\n    def get_queryset(self):\r\n        user = self.request.user\r\n        if user.role == 'student':\r\n            return Overall_No_Dues_Request.objects.filter(user=user)\r\n        return Overall_No_Dues_Request.objects.all()\r\n\r\n    def create(self, request, *args, **kwargs):\r\n        serializer = self.get_serializer(data=request.data)\r\n        if serializer.is_valid(raise_exception=True):\r\n            self.perform_create(serializer)\r\n            return Response({'message': 'Request was applied successfully'}, status=status.HTTP_201_CREATED)\r\n        return Response({'error': serializer.errors}, status=status.HTTP_400_BAD_REQUEST)\r\n\r\n\r\nclass Hostel_No_dueViewset(viewsets.ModelViewSet):\r\n    serializer_class = HostelNoDuesSerializer\r\n    queryset = Hostel_No_Due_request.objects.all()\r\n    permission_classes = [IsAuthenticated, IsStudentOrAdmin]\r\n    renderer_classes = [UserRenderer]\r\n\r\n    def create(self, request, *args, **kwargs):\r\n        serializer = self.get_serializer(data=request.data)\r\n        if serializer.is_valid(raise_exception=True):\r\n            self.perform_create(serializer)\r\n            return Response({'message': 'Request was applied successfully'}, status=status.HTTP_200_OK)\r\n        return Response({'error': serializer.errors}, status=status.HTTP_400_BAD_REQUEST)\r\n\r\n    def perform_create(self, serializer):\r\n        serializer.save(user=self.request.user)\r\n\r\n    def get_queryset(self):\r\n        user = self.request.user\r\n        if user.role == 'student':\r\n            return Hostel_No_Due_request.objects.filter(user=user)\r\n        return Hostel_No_Due_request.objects.all()\r\n\r\n\r\nclass NoDuesListViewSet(viewsets.ModelViewSet):\r\n    queryset = No_Dues_list.objects.all()\r\n    serializer_class = No_Due_ListSerializer\r\n    filter_backends = [filters.SearchFilter]\r\n    permission_classes = [IsAuthenticated]\r\n    renderer_classes = [UserRenderer]\r\n    search_fields = ['request_id__user__registration_number']\r\n\r\n    @action(detail=True, methods=['patch'], url_path='departments/(?P<department_id>[^/.]+)',\r\n            permission_classes=[IsAuthenticated, IsDepartmentOrAdmin])\r\n    def update_department(self, request, pk=None, department_id=None):\r\n        try:\r\n            no_dues_list_instance = self.get_object()\r\n        except No_Dues_list.DoesNotExist:\r\n            return Response({'error': 'No Due_list not found'}, status=status.HTTP_404_NOT_FOUND)\r\n        try:\r\n            department = no_dues_list_instance.cloned_departments.get(Department_id=department_id)\r\n        except Departments_for_no_Dues.DoesNotExist:\r\n            return Response({'error': 'Department not found'}, status=status.HTTP_404_NOT_FOUND)\r\n        user_registration_number = request.user.registration_number\r\n        if not user_registration_number.startswith(\"DEP\"):\r\n            return Response({'error': 'Permission denied'}, status=status.HTTP_403_FORBIDDEN)\r\n        try:\r\n            user_department_id = int(user_registration_number[3:])\r\n        except ValueError:\r\n            return Response({'error': 'Invalid registration number format'}, status=status.HTTP_400_BAD_REQUEST)\r\n        if user_department_id != int(department_id):\r\n            return Response({'error': 'Permission denied'}, status=status.HTTP_403_FORBIDDEN)\r\n\r\n        department_data = request.data\r\n        department_serializer = Cloned_Departments_for_no_dueSerializer(instance=department, data=department_data,\r\n                                                                        partial=True)\r\n        if department_serializer.is_valid():\r\n            department_serializer.save()\r\n\r\n            all_approved = all(\r\n                dep.status == 'approved' for dep in no_dues_list_instance.cloned_departments.all()\r\n            )\r\n            if all_approved:\r\n                no_dues_list_instance.status = 'approved'\r\n                no_dues_list_instance.approved_date = timezone.now()\r\n            else:\r\n                no_dues_list_instance.status = 'pending'\r\n                no_dues_list_instance.approved_date = None\r\n\r\n            no_dues_list_instance.save()\r\n\r\n            return Response(department_serializer.data)\r\n\r\n        return Response({\"error\": \"Department not found\"}, status=status.HTTP_404_NOT_FOUND)\r\n\r\n\r\nclass SemesterVerificationViewSet(viewsets.ModelViewSet):\r\n    queryset = VerifySemesterRegistration.objects.all()\r\n    serializer_class = SemesterVerificationSerializer\r\n    permission_classes = [IsAuthenticated, IsFacultyOrAdmin]\r\n    renderer_classes = [UserRenderer]\r\n    filter_backends = [SearchFilter]\r\n    search_fields = ['status', 'registration_details__student__user__registration_number']\r\n\r\n    def perform_create(self, serializer):\r\n        serializer.save()\r\n\r\n\r\nclass NotificationsViewSet(viewsets.ModelViewSet):\r\n    queryset = Notification.objects.all()\r\n    serializer_class = NotificationSerializer\r\n    permission_classes = [IsAuthenticated]\r\n    filter_backends = [SearchFilter]\r\n    search_fields = ['user__registration_number']\r\n    renderer_classes = [UserRenderer]\r\n\r\n    def destroy(self, request, *args, **kwargs):\r\n        instance = self.get_object()\r\n        request_user = request.user\r\n        notification_user = instance.user\r\n        if request_user != notification_user:\r\n            raise PermissionDenied(\"You do not have permission to delete this notification.\")\r\n        self.perform_destroy(instance)\r\n        return Response({\"message\": \"Notifications has been cleared.\"}, status=status.HTTP_200_OK)\r\n\r\n    def perform_destroy(self, instance):\r\n        instance.delete()\r\n\r\n    @action(detail=False, methods=['delete'])\r\n    def delete_all_notification(self, request):\r\n        ids = request.data.get('ids', [])\r\n        if not ids:\r\n            return Response({'error': 'No ids provided.'}, status=status.HTTP_400_BAD_REQUEST)\r\n        notifications = Notification.objects.filter(id__in=ids, user=request.user)\r\n        if not notifications.exists():\r\n            return Response({'error': 'No Notifications found.'}, status=status.HTTP_400_BAD_REQUEST)\r\n        count = notifications.count()\r\n        notifications.delete()\r\n        return Response({'message': 'Notifications deleted succesfully.'}, status=status.HTTP_200_OK)\r\n\r\n\r\nclass CollegeRequestViewSet(viewsets.ModelViewSet):\r\n    queryset = CollegeRequest.objects.all()\r\n    serializer_class = CollegeRequestSerializer\r\n\r\n    def create(self, request, *args, **kwargs):\r\n        serializer = self.get_serializer(data=request.data)\r\n        serializer.is_valid(raise_exception=True)\r\n        self.perform_create(serializer)\r\n        return Response({'message': 'Request was successful', 'data': serializer.data}, status=status.HTTP_201_CREATED)\r\n\r\n    def perform_create(self, serializer):\r\n        serializer.save()\r\n\r\n\r\nclass CollegeSlugListView(generics.ListAPIView):\r\n    queryset = College.objects.all()\r\n    serializer_class = CollegeSlugSerializer\r\n    # permission_classes = [IsAuthenticated]\r\n    filter_backends = [filters.SearchFilter]\r\n    search_fields = ['id']\r\n\r\n\r\nclass CollegeRequestVerificationView(generics.RetrieveAPIView):\r\n    permission_classes = [IsAdmin]\r\n    queryset = CollegeRequest.objects.all()\r\n    serializer_class = CollegeRequestVerificationSerializer\r\n    lookup_field = 'pk'\r\n\r\n    def partial_update(self, request, *args, **kwargs):\r\n        partial = kwargs.pop('partial', False)\r\n        instance = self.get_object()\r\n        serializer = self.get_serializer(instance, data=request, partial=partial)\r\n        serializer.is_valid(raise_exception=True)\r\n        self.perform_update(serializer)\r\n\r\n        return Response({'message': 'Request was successfully verified'}, status.HTTP_200_OK)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/api/views.py b/backend/api/views.py
--- a/backend/api/views.py	(revision bbd98cfd2878881e1bcb63b49dce0d8390545cdd)
+++ b/backend/api/views.py	(date 1722278618169)
@@ -805,17 +805,17 @@
     search_fields = ['id']
 
 
-class CollegeRequestVerificationView(generics.RetrieveAPIView):
+class CollegeRequestVerificationView(generics.RetrieveUpdateAPIView):
     permission_classes = [IsAdmin]
     queryset = CollegeRequest.objects.all()
     serializer_class = CollegeRequestVerificationSerializer
     lookup_field = 'pk'
 
-    def partial_update(self, request, *args, **kwargs):
+    def update(self, request, *args, **kwargs):
         partial = kwargs.pop('partial', False)
         instance = self.get_object()
-        serializer = self.get_serializer(instance, data=request, partial=partial)
+        serializer = self.get_serializer(instance, data=request.data, partial=partial)
         serializer.is_valid(raise_exception=True)
         self.perform_update(serializer)
 
-        return Response({'message': 'Request was successfully verified'}, status.HTTP_200_OK)
+        return Response({'message': 'Request was successfully updated'}, status.HTTP_200_OK)
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"60d9492d-1208-4010-8d85-a75bd53b833c\" name=\"Changes\" comment=\"L\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/backend/api/views.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/backend/api/views.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ChangesViewManager\" show_ignored=\"true\">\r\n    <option name=\"groupingKeys\">\r\n      <option value=\"directory\" />\r\n    </option>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"RESET_MODE\" value=\"HARD\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"recentNewPullRequestHead\">\r\n      <RepoCoordinatesHolder>\r\n        <option name=\"owner\" value=\"Apuri-Amarnath\" />\r\n        <option name=\"repository\" value=\"smart-backend\" />\r\n      </RepoCoordinatesHolder>\r\n    </option>\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"97611f42-26fc-46ed-8d5a-204a1952fe60\" />\r\n        <option name=\"url\" value=\"https://github.com/Apuri-Amarnath/smart-backend.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 6\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2gKkHtq1o4UNGlvA6QFDJtIS7wd\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;Python.emails.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.serializers.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;amar-back&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/assignment&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settings.ide.settings.uml&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  },\r\n  &quot;keyToStringList&quot;: {\r\n    &quot;DatabaseDriversLRU&quot;: [\r\n      &quot;sqlite&quot;\r\n    ]\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\smart education\\backend\" />\r\n      <recent name=\"C:\\smart education\\backend\\api\\management\\commands\" />\r\n      <recent name=\"C:\\smart education\" />\r\n      <recent name=\"C:\\smart education\\education\\src\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-eebebe6c2be4-b11f5e8da5ad-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-233.15325.20\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"60d9492d-1208-4010-8d85-a75bd53b833c\" name=\"Changes\" comment=\"\" />\r\n      <created>1715453571424</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1715453571424</updated>\r\n      <workItem from=\"1715453572646\" duration=\"1302000\" />\r\n      <workItem from=\"1715468623254\" duration=\"89000\" />\r\n      <workItem from=\"1715513060156\" duration=\"247000\" />\r\n      <workItem from=\"1715693668356\" duration=\"9050000\" />\r\n      <workItem from=\"1715749805227\" duration=\"8454000\" />\r\n      <workItem from=\"1715758830904\" duration=\"1470000\" />\r\n      <workItem from=\"1715760445309\" duration=\"1821000\" />\r\n      <workItem from=\"1715861704112\" duration=\"799000\" />\r\n      <workItem from=\"1715862810071\" duration=\"1490000\" />\r\n      <workItem from=\"1715886902880\" duration=\"1766000\" />\r\n      <workItem from=\"1715918697108\" duration=\"2441000\" />\r\n      <workItem from=\"1715922636417\" duration=\"1708000\" />\r\n      <workItem from=\"1715960566578\" duration=\"1154000\" />\r\n      <workItem from=\"1716096317864\" duration=\"9993000\" />\r\n      <workItem from=\"1716106553178\" duration=\"614000\" />\r\n      <workItem from=\"1716126281342\" duration=\"6965000\" />\r\n      <workItem from=\"1716137419980\" duration=\"2623000\" />\r\n      <workItem from=\"1716170696244\" duration=\"11581000\" />\r\n      <workItem from=\"1716198493454\" duration=\"1323000\" />\r\n      <workItem from=\"1716365823058\" duration=\"743000\" />\r\n      <workItem from=\"1716674501991\" duration=\"915000\" />\r\n      <workItem from=\"1716676136851\" duration=\"1408000\" />\r\n      <workItem from=\"1716911508869\" duration=\"1339000\" />\r\n      <workItem from=\"1716923115478\" duration=\"15934000\" />\r\n      <workItem from=\"1716940476483\" duration=\"540000\" />\r\n      <workItem from=\"1716941471400\" duration=\"148000\" />\r\n      <workItem from=\"1716980027990\" duration=\"388000\" />\r\n      <workItem from=\"1716995456634\" duration=\"131000\" />\r\n      <workItem from=\"1717329678471\" duration=\"10301000\" />\r\n      <workItem from=\"1717350018151\" duration=\"2349000\" />\r\n      <workItem from=\"1717427655202\" duration=\"11594000\" />\r\n      <workItem from=\"1717508678135\" duration=\"3556000\" />\r\n      <workItem from=\"1717512630054\" duration=\"2772000\" />\r\n      <workItem from=\"1717520139049\" duration=\"1271000\" />\r\n      <workItem from=\"1717578851696\" duration=\"2179000\" />\r\n      <workItem from=\"1717598440178\" duration=\"2741000\" />\r\n      <workItem from=\"1717669508766\" duration=\"1572000\" />\r\n      <workItem from=\"1717671742106\" duration=\"221000\" />\r\n      <workItem from=\"1717673913227\" duration=\"2839000\" />\r\n      <workItem from=\"1717745760809\" duration=\"4723000\" />\r\n      <workItem from=\"1717844717528\" duration=\"18628000\" />\r\n      <workItem from=\"1717863518794\" duration=\"619000\" />\r\n      <workItem from=\"1718111669899\" duration=\"7899000\" />\r\n      <workItem from=\"1718194454495\" duration=\"12776000\" />\r\n      <workItem from=\"1718207315162\" duration=\"531000\" />\r\n      <workItem from=\"1718372073391\" duration=\"3741000\" />\r\n      <workItem from=\"1718612563378\" duration=\"14861000\" />\r\n      <workItem from=\"1718631934636\" duration=\"820000\" />\r\n      <workItem from=\"1718633075417\" duration=\"296000\" />\r\n      <workItem from=\"1718797750646\" duration=\"21000\" />\r\n      <workItem from=\"1718812038104\" duration=\"3087000\" />\r\n      <workItem from=\"1718864184194\" duration=\"1077000\" />\r\n      <workItem from=\"1718881570491\" duration=\"354000\" />\r\n      <workItem from=\"1718883819526\" duration=\"8288000\" />\r\n      <workItem from=\"1718909633878\" duration=\"375000\" />\r\n      <workItem from=\"1718964601357\" duration=\"4983000\" />\r\n      <workItem from=\"1719064880624\" duration=\"6528000\" />\r\n      <workItem from=\"1719082313775\" duration=\"668000\" />\r\n      <workItem from=\"1719123477471\" duration=\"5767000\" />\r\n      <workItem from=\"1719142669424\" duration=\"699000\" />\r\n      <workItem from=\"1719146034353\" duration=\"150000\" />\r\n      <workItem from=\"1719255650445\" duration=\"4478000\" />\r\n      <workItem from=\"1719311349355\" duration=\"2830000\" />\r\n      <workItem from=\"1719341436383\" duration=\"1112000\" />\r\n      <workItem from=\"1719394093635\" duration=\"1721000\" />\r\n      <workItem from=\"1719418181723\" duration=\"1186000\" />\r\n      <workItem from=\"1719422042563\" duration=\"1153000\" />\r\n      <workItem from=\"1719661812479\" duration=\"6492000\" />\r\n      <workItem from=\"1719668705435\" duration=\"17014000\" />\r\n      <workItem from=\"1719695313240\" duration=\"2394000\" />\r\n      <workItem from=\"1719897699995\" duration=\"9350000\" />\r\n      <workItem from=\"1719942699149\" duration=\"2580000\" />\r\n      <workItem from=\"1719948347422\" duration=\"5519000\" />\r\n      <workItem from=\"1720014140424\" duration=\"22897000\" />\r\n      <workItem from=\"1720092043293\" duration=\"13372000\" />\r\n      <workItem from=\"1720116178488\" duration=\"1060000\" />\r\n      <workItem from=\"1720364716501\" duration=\"714000\" />\r\n      <workItem from=\"1721043970171\" duration=\"91000\" />\r\n      <workItem from=\"1721223258957\" duration=\"8096000\" />\r\n      <workItem from=\"1721488063314\" duration=\"3975000\" />\r\n      <workItem from=\"1721606458730\" duration=\"13599000\" />\r\n      <workItem from=\"1721670964735\" duration=\"29000\" />\r\n      <workItem from=\"1721820246397\" duration=\"5805000\" />\r\n      <workItem from=\"1722136028646\" duration=\"72000\" />\r\n      <workItem from=\"1722222249012\" duration=\"6190000\" />\r\n      <workItem from=\"1722262001037\" duration=\"8160000\" />\r\n      <workItem from=\"1722274591872\" duration=\"305000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00119\" summary=\"added changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719680960310</created>\r\n      <option name=\"number\" value=\"00119\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00119\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719680960310</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00120\" summary=\"added changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719681066142</created>\r\n      <option name=\"number\" value=\"00120\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00120\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719681066142</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00121\" summary=\"notifications done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719681912562</created>\r\n      <option name=\"number\" value=\"00121\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00121\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719681912562</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00122\" summary=\"notifications done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719682018697</created>\r\n      <option name=\"number\" value=\"00122\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00122\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719682018698</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00123\" summary=\"notifications done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719685443601</created>\r\n      <option name=\"number\" value=\"00123\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00123\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719685443601</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00124\" summary=\"notifications done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719685566947</created>\r\n      <option name=\"number\" value=\"00124\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00124\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719685566947</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00125\" summary=\"notifications done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719686483274</created>\r\n      <option name=\"number\" value=\"00125\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00125\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719686483274</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00126\" summary=\"notifications done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719695392242</created>\r\n      <option name=\"number\" value=\"00126\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00126\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719695392242</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00127\" summary=\"notifications done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719900178244</created>\r\n      <option name=\"number\" value=\"00127\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00127\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719900178244</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00128\" summary=\"notifications done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719900272071</created>\r\n      <option name=\"number\" value=\"00128\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00128\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719900272072</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00129\" summary=\"notifications done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719906345148</created>\r\n      <option name=\"number\" value=\"00129\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00129\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719906345148</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00130\" summary=\"notifications done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719906739373</created>\r\n      <option name=\"number\" value=\"00130\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00130\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719906739373</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00131\" summary=\"notifications done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719907456405</created>\r\n      <option name=\"number\" value=\"00131\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00131\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719907456405</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00132\" summary=\"mess fee update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719907713947</created>\r\n      <option name=\"number\" value=\"00132\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00132\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719907713947</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00133\" summary=\"mess fee update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719907831568</created>\r\n      <option name=\"number\" value=\"00133\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00133\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719907831568</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00134\" summary=\"mess fee update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719907929826</created>\r\n      <option name=\"number\" value=\"00134\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00134\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719907929826</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00135\" summary=\"mess fee update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719907989482</created>\r\n      <option name=\"number\" value=\"00135\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00135\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719907989482</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00136\" summary=\"mess fee update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719908332876</created>\r\n      <option name=\"number\" value=\"00136\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00136\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719908332876</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00137\" summary=\"mess fee update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719908487886</created>\r\n      <option name=\"number\" value=\"00137\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00137\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719908487886</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00138\" summary=\"mess fee update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719908519277</created>\r\n      <option name=\"number\" value=\"00138\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00138\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719908519277</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00139\" summary=\"mess fee update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719942806335</created>\r\n      <option name=\"number\" value=\"00139\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00139\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719942806335</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00140\" summary=\"mess fee update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719943049956</created>\r\n      <option name=\"number\" value=\"00140\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00140\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719943049956</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00141\" summary=\"mess fee update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719943803359</created>\r\n      <option name=\"number\" value=\"00141\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00141\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719943803359</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00142\" summary=\"mess fee update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719944245273</created>\r\n      <option name=\"number\" value=\"00142\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00142\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719944245273</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00143\" summary=\"mess fee update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719944713092</created>\r\n      <option name=\"number\" value=\"00143\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00143\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719944713092</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00144\" summary=\"mess fee update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719944937204</created>\r\n      <option name=\"number\" value=\"00144\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00144\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719944937204</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00145\" summary=\"mess fee update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719949254620</created>\r\n      <option name=\"number\" value=\"00145\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00145\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719949254621</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00146\" summary=\"mess fee update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719949908627</created>\r\n      <option name=\"number\" value=\"00146\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00146\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719949908627</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00147\" summary=\"mess fee update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719950069391</created>\r\n      <option name=\"number\" value=\"00147\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00147\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719950069391</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00148\" summary=\"mess fee update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719950154707</created>\r\n      <option name=\"number\" value=\"00148\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00148\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719950154707</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00149\" summary=\"no dues working fine\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719953463128</created>\r\n      <option name=\"number\" value=\"00149\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00149\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719953463128</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00150\" summary=\"no dues working fine\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1719953834503</created>\r\n      <option name=\"number\" value=\"00150\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00150\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719953834503</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00151\" summary=\"add notifications\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1720017012812</created>\r\n      <option name=\"number\" value=\"00151\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00151\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1720017012813</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00152\" summary=\"add notifications\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1720017576877</created>\r\n      <option name=\"number\" value=\"00152\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00152\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1720017576877</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00153\" summary=\"add notifications\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1720019537918</created>\r\n      <option name=\"number\" value=\"00153\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00153\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1720019537918</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00154\" summary=\"add notifications\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1720020193713</created>\r\n      <option name=\"number\" value=\"00154\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00154\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1720020193713</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00155\" summary=\"fixed Overall nodues\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1720043310754</created>\r\n      <option name=\"number\" value=\"00155\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00155\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1720043310754</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00156\" summary=\"fixed Overall nodues\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1720043525624</created>\r\n      <option name=\"number\" value=\"00156\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00156\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1720043525624</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00157\" summary=\"fixed Overall nodues\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1720099897590</created>\r\n      <option name=\"number\" value=\"00157\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00157\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1720099897591</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00158\" summary=\"fixed Overall nodues\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1720100187719</created>\r\n      <option name=\"number\" value=\"00158\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00158\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1720100187719</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00159\" summary=\"fixed notifications\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1720103285449</created>\r\n      <option name=\"number\" value=\"00159\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00159\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1720103285449</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00160\" summary=\"fixed notifications\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1720104465539</created>\r\n      <option name=\"number\" value=\"00160\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00160\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1720104465539</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00161\" summary=\"fixed notifications\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1720106898922</created>\r\n      <option name=\"number\" value=\"00161\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00161\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1720106898922</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00162\" summary=\"fixed notifications\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1720116338269</created>\r\n      <option name=\"number\" value=\"00162\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00162\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1720116338270</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00163\" summary=\"fixed notifications\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1720116635370</created>\r\n      <option name=\"number\" value=\"00163\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00163\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1720116635370</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00164\" summary=\"fixed refresh token\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1720365345566</created>\r\n      <option name=\"number\" value=\"00164\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00164\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1720365345566</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00165\" summary=\"some modifications\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1721622724429</created>\r\n      <option name=\"number\" value=\"00165\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00165\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1721622724430</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00166\" summary=\"v2 - module 1\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1722269411093</created>\r\n      <option name=\"number\" value=\"00166\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00166\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1722269411094</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00167\" summary=\"change role to office\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1722271908380</created>\r\n      <option name=\"number\" value=\"00167\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00167\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1722271908380</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"168\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.History.Properties\">\r\n    <option name=\"COLUMN_ID_ORDER\">\r\n      <list>\r\n        <option value=\"Default.Root\" />\r\n        <option value=\"Default.Author\" />\r\n        <option value=\"Default.Date\" />\r\n        <option value=\"Default.Subject\" />\r\n        <option value=\"Space.CommitStatus\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"RECENT_FILTERS\">\r\n      <map>\r\n        <entry key=\"Branch\">\r\n          <value>\r\n            <list>\r\n              <RecentGroup>\r\n                <option name=\"FILTER_VALUES\">\r\n                  <option value=\"main\" />\r\n                </option>\r\n              </RecentGroup>\r\n              <RecentGroup>\r\n                <option name=\"FILTER_VALUES\">\r\n                  <option value=\"backend/main\" />\r\n                </option>\r\n              </RecentGroup>\r\n            </list>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"amar-back\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"fix messfeepayment\" />\r\n    <MESSAGE value=\"fix guestroom\" />\r\n    <MESSAGE value=\"added search filter on guestroom\" />\r\n    <MESSAGE value=\"added date in complaint\" />\r\n    <MESSAGE value=\"updated fees model\" />\r\n    <MESSAGE value=\"allotment fix\" />\r\n    <MESSAGE value=\"fix subjects add\" />\r\n    <MESSAGE value=\"fixed mess fee\" />\r\n    <MESSAGE value=\"fixed Hostel Due\" />\r\n    <MESSAGE value=\"overall due post cmple\" />\r\n    <MESSAGE value=\"fix mess fee\" />\r\n    <MESSAGE value=\"multiple fixes\" />\r\n    <MESSAGE value=\"added verify semester-registration\" />\r\n    <MESSAGE value=\"some changes\" />\r\n    <MESSAGE value=\"added changes\" />\r\n    <MESSAGE value=\"notifications done\" />\r\n    <MESSAGE value=\"mess fee update\" />\r\n    <MESSAGE value=\"no dues working fine\" />\r\n    <MESSAGE value=\"add notifications\" />\r\n    <MESSAGE value=\"fixed Overall nodues\" />\r\n    <MESSAGE value=\"fixed notifications\" />\r\n    <MESSAGE value=\"fixed refresh token\" />\r\n    <MESSAGE value=\"some modifications\" />\r\n    <MESSAGE value=\"v2 - module 1\" />\r\n    <MESSAGE value=\"change role to office\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"change role to office\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/smart_education$serializers.coverage\" NAME=\"serializers Coverage Results\" MODIFIED=\"1717520356710\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/backend/api\" />\r\n    <SUITE FILE_PATH=\"coverage/smart_education$emails.coverage\" NAME=\"emails Coverage Results\" MODIFIED=\"1722224466417\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/backend/api\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision bbd98cfd2878881e1bcb63b49dce0d8390545cdd)
+++ b/.idea/workspace.xml	(date 1722278336548)
@@ -200,15 +200,8 @@
       <workItem from="1722136028646" duration="72000" />
       <workItem from="1722222249012" duration="6190000" />
       <workItem from="1722262001037" duration="8160000" />
-      <workItem from="1722274591872" duration="305000" />
-    </task>
-    <task id="LOCAL-00119" summary="added changes">
-      <option name="closed" value="true" />
-      <created>1719680960310</created>
-      <option name="number" value="00119" />
-      <option name="presentableId" value="LOCAL-00119" />
-      <option name="project" value="LOCAL" />
-      <updated>1719680960310</updated>
+      <workItem from="1722274591872" duration="654000" />
+      <workItem from="1722278018080" duration="318000" />
     </task>
     <task id="LOCAL-00120" summary="added changes">
       <option name="closed" value="true" />
@@ -594,7 +587,15 @@
       <option name="project" value="LOCAL" />
       <updated>1722271908380</updated>
     </task>
-    <option name="localTasksCounter" value="168" />
+    <task id="LOCAL-00168" summary="L">
+      <option name="closed" value="true" />
+      <created>1722274928318</created>
+      <option name="number" value="00168" />
+      <option name="presentableId" value="LOCAL-00168" />
+      <option name="project" value="LOCAL" />
+      <updated>1722274928318</updated>
+    </task>
+    <option name="localTasksCounter" value="169" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -656,7 +657,6 @@
   </component>
   <component name="VcsManagerConfiguration">
     <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
-    <MESSAGE value="fix messfeepayment" />
     <MESSAGE value="fix guestroom" />
     <MESSAGE value="added search filter on guestroom" />
     <MESSAGE value="added date in complaint" />
@@ -681,7 +681,8 @@
     <MESSAGE value="some modifications" />
     <MESSAGE value="v2 - module 1" />
     <MESSAGE value="change role to office" />
-    <option name="LAST_COMMIT_MESSAGE" value="change role to office" />
+    <MESSAGE value="L" />
+    <option name="LAST_COMMIT_MESSAGE" value="L" />
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
     <SUITE FILE_PATH="coverage/smart_education$serializers.coverage" NAME="serializers Coverage Results" MODIFIED="1717520356710" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/backend/api" />
